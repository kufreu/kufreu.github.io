library(sf)
library(dplyr)
library(tigris)
midd = read_sf("https://opendata.arcgis.com/datasets/625b92329bb841cf8295d14553b67e1f_2.geojson") %>%
filter(COLLEGE == "MIDDLEBURY COLLEGE") %>%
st_transform(32145) %>% # Vermont State Plane Meters
st_union() %>%
st_centroid() %>%
st_buffer(5000) %>%
st_bbox %>%
st_as_sfc
streets = roads("vt", "addison county", progress_bar = F) %>% st_transform(32145) %>% st_intersection(midd) %>%
filter(!grepl("MULTI", as.character(st_geometry_type(.))))
test = st_cast(streets, "MULTILINESTRING")
test
st_cast(streets)
st_segments_dt = function(x, max_length) {
# breaks linestrings/polygons into line segments, keeps attributes
# x: layer with linestrings
# max_length: optional parameter, max length of segments, unit from crs
library(sf)
library(data.table)
library(tibble)
x$id = 1:nrow(x)
if (!missing(max_length)) {
x = st_segmentize(x, max_length)
}
coord = st_coordinates(x)
col = ncol(coord)
colname = colnames(coord)[col]
geom = as.data.table(coord)
geom[, `:=`(x2 = shift(X, type = "lead"), y2 = shift(Y, type = "lead")), by = colname]
geom = na.omit(geom)
geom[, rows := .I]
geom[,geometry := .(list(st_linestring(rbind(c(X,Y),c(x2,y2))))), by = rows]
geom = st_sfc(geom$geometry, crs = st_crs(x))
fid = as.data.table(coord[, col])
colnames(fid) = "id"
setkey(fid, id)
fid = fid[fid[, .I[-1], by = id]$V1][as.data.table(st_drop_geometry(x)), on = "id"]
fid[, `:=`(geometry = geom, id = NULL)]
st_sf(as_tibble(fid))
}
streets$test = 1:nrow(streets)
streets
test = st_segments_dt(streets,4)
test
?st_union
streets
summarize(group_by(test,test))
test2 = summarize(group_by(test,test))
test2
test2 %>% st_cast
test2 %>% st_cast("LINESTRING")
test3 = rbind(test2,streets)
test2
test3 = rbind(test2,select(streets,test))
test3
st_cast(test3, "LINESTRING")
warnings()
?st_cast
st_cast(test3, "LINESTRING", do_split = T)
warnings()
st_cast(test3, "LINESTRING", group_or_split = T)
warnings()
st_geometry(streets)
